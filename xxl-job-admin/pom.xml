<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.xuxueli</groupId>
		<artifactId>xxl-job</artifactId>
		<version>2.5.0-SNAPSHOT</version>
	</parent>
	<artifactId>xxl-job-admin</artifactId>
	<packaging>jar</packaging>

	<properties>
		<maven.deploy.skip>true</maven.deploy.skip>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- starter-web：spring-webmvc + autoconfigure + logback + yaml + tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- starter-test：junit + spring-test + mockito -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- freemarker-starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>

		<!-- mail-starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- starter-actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- mybatis-starter：mybatis + mybatis-spring + hikari（default） -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis-spring-boot-starter.version}</version>
		</dependency>
		<!-- mysql -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>${mysql-connector-j.version}</version>
		</dependency>

		<dependency>
			<groupId>com.eatthepath</groupId>
			<artifactId>java-otp</artifactId>
			<version>0.4.0</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.16.0</version>
		</dependency>

		<!-- xxl-job-core -->
		<dependency>
			<groupId>com.xuxueli</groupId>
			<artifactId>xxl-job-core</artifactId>
			<version>${project.parent.version}</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>xxl-job-admin</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- docker -->
			<!--<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					&lt;!&ndash; made of '[a-z0-9-_.]' &ndash;&gt;
					<imageName>${project.artifactId}:${project.version}</imageName>
					<dockerDirectory>${project.basedir}</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>-->

		</plugins>
		<resources>
			<!--排除配置文件-->
			<resource>
				<directory>src/main/resources</directory>
				<!--先排除所有的配置文件-->
				<excludes>
					<!--使用通配符，当然可以定义多个exclude标签进行排除-->
					<exclude>application*.properties</exclude>
				</excludes>
			</resource>

			<!--根据激活条件引入打包所需的配置和文件-->
			<resource>
				<directory>src/main/resources</directory>
				<!--引入所需环境的配置文件-->
				<filtering>true</filtering>
				<includes>
					<include>application.properties</include>
					<include>application-${profile.active}.properties</include>
					<!--根据maven选择环境导入配置文件-->
					<include>application-${profile.active}.yml</include>
				</includes>
			</resource>
		</resources>
	</build>


	<!--定义三种开发环境-->
	<profiles>
		<profile>
			<!--不同环境的唯一id-->
			<id>dev</id>
			<activation>
				<!--默认激活开发环境-->
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!--profile.active对应application.yml中的@profile.active@-->
				<profile.active>dev</profile.active>
			</properties>
		</profile>

		<!--测试环境-->
		<profile>
			<id>test</id>
			<properties>
				<profile.active>test</profile.active>
			</properties>
		</profile>

		<!--生产环境-->
		<profile>
			<id>prod</id>
			<properties>
				<profile.active>prod</profile.active>
			</properties>
		</profile>

<!--		<profile>-->
<!--			<id>prod-aliyun</id>-->
<!--			<properties>-->
<!--				<profile.active>prod-aliyun</profile.active>-->
<!--			</properties>-->
<!--		</profile>-->
	</profiles>

</project>
